// NOTE - eventually this file will be automatically updated using a Perl script that understand
// the naming of test case files, functions, and namespaces.

#ifndef _TESTCASES_H
#define _TESTCASES_H

#ifdef __cplusplus
extern "C" {
#endif

// declare C good and bad functions
#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
	void CWE327_Use_Broken_Crypto__w32rot13_01_good();

	void CWE327_Use_Broken_Crypto__w32rot13_02_good();

	void CWE327_Use_Broken_Crypto__w32rot13_03_good();

	void CWE327_Use_Broken_Crypto__w32rot13_04_good();

	void CWE327_Use_Broken_Crypto__w32rot13_05_good();

	void CWE327_Use_Broken_Crypto__w32rot13_06_good();

	void CWE327_Use_Broken_Crypto__w32rot13_07_good();

	void CWE327_Use_Broken_Crypto__w32rot13_08_good();

	void CWE327_Use_Broken_Crypto__w32rot13_09_good();

	void CWE327_Use_Broken_Crypto__w32rot13_10_good();

	void CWE327_Use_Broken_Crypto__w32rot13_11_good();

	void CWE327_Use_Broken_Crypto__w32rot13_12_good();

	void CWE327_Use_Broken_Crypto__w32rot13_13_good();

	void CWE327_Use_Broken_Crypto__w32rot13_14_good();

	void CWE327_Use_Broken_Crypto__w32rot13_15_good();

	void CWE327_Use_Broken_Crypto__w32rot13_16_good();

	void CWE327_Use_Broken_Crypto__w32rot13_17_good();

	void CWE327_Use_Broken_Crypto__w32rot13_18_good();

	void CWE327_Use_Broken_Crypto__w32rot13_19_good();

	void CWE327_Use_Broken_Crypto__w32xor_01_good();

	void CWE327_Use_Broken_Crypto__w32xor_02_good();

	void CWE327_Use_Broken_Crypto__w32xor_03_good();

	void CWE327_Use_Broken_Crypto__w32xor_04_good();

	void CWE327_Use_Broken_Crypto__w32xor_05_good();

	void CWE327_Use_Broken_Crypto__w32xor_06_good();

	void CWE327_Use_Broken_Crypto__w32xor_07_good();

	void CWE327_Use_Broken_Crypto__w32xor_08_good();

	void CWE327_Use_Broken_Crypto__w32xor_09_good();

	void CWE327_Use_Broken_Crypto__w32xor_10_good();

	void CWE327_Use_Broken_Crypto__w32xor_11_good();

	void CWE327_Use_Broken_Crypto__w32xor_12_good();

	void CWE327_Use_Broken_Crypto__w32xor_13_good();

	void CWE327_Use_Broken_Crypto__w32xor_14_good();

	void CWE327_Use_Broken_Crypto__w32xor_15_good();

	void CWE327_Use_Broken_Crypto__w32xor_16_good();

	void CWE327_Use_Broken_Crypto__w32xor_17_good();

	void CWE327_Use_Broken_Crypto__w32xor_18_good();

	void CWE327_Use_Broken_Crypto__w32xor_19_good();

	/* END-AUTOGENERATED-C-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
	void CWE327_Use_Broken_Crypto__w32rot13_01_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_02_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_03_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_04_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_05_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_06_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_07_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_08_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_09_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_10_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_11_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_12_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_13_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_14_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_15_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_16_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_17_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_18_bad();

	void CWE327_Use_Broken_Crypto__w32rot13_19_bad();

	void CWE327_Use_Broken_Crypto__w32xor_01_bad();

	void CWE327_Use_Broken_Crypto__w32xor_02_bad();

	void CWE327_Use_Broken_Crypto__w32xor_03_bad();

	void CWE327_Use_Broken_Crypto__w32xor_04_bad();

	void CWE327_Use_Broken_Crypto__w32xor_05_bad();

	void CWE327_Use_Broken_Crypto__w32xor_06_bad();

	void CWE327_Use_Broken_Crypto__w32xor_07_bad();

	void CWE327_Use_Broken_Crypto__w32xor_08_bad();

	void CWE327_Use_Broken_Crypto__w32xor_09_bad();

	void CWE327_Use_Broken_Crypto__w32xor_10_bad();

	void CWE327_Use_Broken_Crypto__w32xor_11_bad();

	void CWE327_Use_Broken_Crypto__w32xor_12_bad();

	void CWE327_Use_Broken_Crypto__w32xor_13_bad();

	void CWE327_Use_Broken_Crypto__w32xor_14_bad();

	void CWE327_Use_Broken_Crypto__w32xor_15_bad();

	void CWE327_Use_Broken_Crypto__w32xor_16_bad();

	void CWE327_Use_Broken_Crypto__w32xor_17_bad();

	void CWE327_Use_Broken_Crypto__w32xor_18_bad();

	void CWE327_Use_Broken_Crypto__w32xor_19_bad();

	/* END-AUTOGENERATED-C-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD

#ifdef __cplusplus
} // end extern "C"
#endif

#ifdef __cplusplus
// declare C++ namespaces and good and bad functions

#ifndef OMITGOOD
	/* BEGIN-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-CPP-GOOD-FUNCTION-DECLARATIONS */
#endif // OMITGOOD


#ifndef OMITBAD
	/* BEGIN-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */

	/* END-AUTOGENERATED-CPP-BAD-FUNCTION-DECLARATIONS */
#endif // OMITBAD


#endif // __cplusplus


#endif //  _TESTCASES_H
